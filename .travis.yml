branches:
  except:
    - /^[0-9]/

language: cpp

cache:
  - apt

update-alternatives:
  - install /usr/bin/gcc gcc /usr/bin/gcc-4.9 50
  - install /usr/bin/g++ g++ /usr/bin/g++-4.9 50

sources:
  - trusty


# Domoticz ftp server account & encrypted password
env:
  global:
    - "FTP_HOST=62.84.241.110"
    - "FTP_USER=uploads@domoticz.com"

# What to install before the build
before_install:
  # Domoticz needs the full history to be able to calculate the version string
  - git fetch --unshallow
  # OpenZWave
  - git clone --depth 1 https://github.com/OpenZWave/open-zwave.git
  - ln -s open-zwave open-zwave-read-only


# Build matrix definition
# * Two builds
#   1. Linux x86_64
#   2. Apple OSX
matrix:
  include:
  # Linux x86_64
  - os: linux
    compiler:
      - gcc
    env:
      - "TARGET_ARCHITECTURE=x86_64"
      - "SHACMD=sha256sum"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - boost-latest
        packages:
          - gcc-4.9
          - g++-4.9
          - libboost1.55-all-dev
          - cmake
          - libsqlite3-dev
          - curl
          - libcurl4-openssl-dev
          - libusb-dev
          - zlib1g-dev
          - libssl-dev
          - libudev-dev
          - git
    script:
      - (cd open-zwave-read-only; make)
      - cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_LIBRARY_PATH=open-zwave-read-only
      - make
  # Linux armv7 (Raspberry Pi 1) on Docker'zed crosscompiler, see
  # * https://hub.docker.com/r/tonia/buildroot-rpi-crosscompiler
  # * https://github.com/ToniA/buildroot-rpi-crosscompiler
  - os: linux
    compiler:
      - gcc
    env:
      - "TARGET_ARCHITECTURE=armv7"
      - "DOCKER_IMAGE=tonia/buildroot-rpi-crosscompiler:kernel_3.18"
      - "TOOLCHAIN_ARCHITECTURE=gnueabihf"
      - "SHACMD=sha256sum"
    addons:
      apt:
        packages:
          - git
    sudo: required
    services:
      - docker
    install:
      - docker pull ${DOCKER_IMAGE}
    script: >
      docker run -v ${TRAVIS_BUILD_DIR}:/build ${DOCKER_IMAGE} /bin/sh -c "
        #cd /build/open-zwave-read-only; make -e CROSS_COMPILE=arm-buildroot-linux-${TOOLCHAIN_ARCHITECTURE}- &&
        #ln -s /build/open-zwave-read-only/libopenzwave.a /tmp/buildroot/output/host/usr/arm-buildroot-linux-${TOOLCHAIN_ARCHITECTURE}/sysroot/usr/lib/libopenzwave.a &&
        cd /build &&
        cmake -DCMAKE_TOOLCHAIN_FILE=/tmp/buildroot/output/host/usr/share/buildroot/toolchainfile.cmake -DCMAKE_BUILD_TYPE=Release -DOPENSSL_INCLUDE_DIR=/tmp/buildroot/output/host/usr/arm-buildroot-linux-${TOOLCHAIN_ARCHITECTURE}/sysroot/usr/include/openssl &&
        make"
  # Apple OSX
  - os: osx
    compiler:
      - gcc
    env:
      - "TARGET_ARCHITECTURE=x86_64"
      - "SHACMD=shasum"
      - "SHAARGS1=-a"
      - "SHAARGS2=256"
    install:
      - brew install cmake
      - brew install boost|| true
      - brew install libusb
      - brew install libusb-compat
      - brew install zlib || true
      - brew install openssl
      - brew link openssl --force
      - brew install md5sha1sum
      - export LDFLAGS=-L/usr/local/opt/openssl/lib
      - export CPPFLAGS=-I/usr/local/opt/openssl/include
    script:
      - cmake -DCMAKE_BUILD_TYPE=Release
      - make


# What to do with the build artifacts
# - Upload to the Domoticz file server
before_deploy:
  - tar czf domoticz_${TRAVIS_OS_NAME}_${TARGET_ARCHITECTURE}_latest.tgz domoticz History.txt License.txt domoticz.sh server_cert.pem updatebeta updaterelease www/ scripts/ Config/
  - ${SHACMD} ${SHAARGS1} ${SHAARGS2} domoticz_${TRAVIS_OS_NAME}_${TARGET_ARCHITECTURE}_latest.tgz > domoticz_${TRAVIS_OS_NAME}_${TARGET_ARCHITECTURE}_latest.tgz.sha256sum
  - cp appversion.h.txt version_${TRAVIS_OS_NAME}_${TARGET_ARCHITECTURE}.h
  - cp History.txt history_${TRAVIS_OS_NAME}_${TARGET_ARCHITECTURE}.txt
deploy:
  skip_cleanup: true
  provider: script
  script: curl --ftp-ssl -T "{domoticz_${TRAVIS_OS_NAME}_${TARGET_ARCHITECTURE}_latest.tgz,domoticz_${TRAVIS_OS_NAME}_${TARGET_ARCHITECTURE}_latest.tgz.sha256sum,version_${TRAVIS_OS_NAME}_${TARGET_ARCHITECTURE}.h,history_${TRAVIS_OS_NAME}_${TARGET_ARCHITECTURE}.txt}" -k -u "$FTP_USER:$FTP_PASSWORD" "ftp://$FTP_HOST/beta/"
  on:
    branch: master
    repo: domoticz/domoticz
